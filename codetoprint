#include <iostream>
using namespace std;

class Fraction {
private:
    int numerator;
    int denominator;

public:
    Fraction() {
        numerator = 0;
        denominator = 1;
    }

    void setFraction(int num, int den) {
        numerator = num;
        denominator = den;
    }

    int getNumerator() const {
        return numerator;
    }

    int getDenominator() const {
        return denominator;
    }

    friend Fraction addMixedFraction(Fraction frac1, Fraction frac2);
};

Fraction addMixedFraction(Fraction frac1, Fraction frac2) {
    Fraction result;
    int num, den;

    if (frac1.denominator == frac2.denominator) {
        num = frac1.numerator + frac2.numerator;
        den = frac1.denominator;
    } else {
        den = frac1.denominator * frac2.denominator;
        num = (frac1.numerator * frac2.denominator) + (frac2.numerator * frac1.denominator);
    }

    result.setFraction(num, den);
    return result;
}

int main() {
    int num1, den1, num2, den2;
    cin >> num1 >> den1;
    cin >> num2 >> den2;

    Fraction frac1, frac2;
    frac1.setFraction(num1, den1);
    frac2.setFraction(num2, den2);

    Fraction result = addMixedFraction(frac1, frac2);

    cout << result.getNumerator() << "/" << result.getDenominator();
    return 0;
}